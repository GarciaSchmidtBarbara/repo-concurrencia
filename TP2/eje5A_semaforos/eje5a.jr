//a)	buffer simple (1 elemento), 1 productor y 1 consumidor.

import edu.ucdavis.jr.JR;       //Importa la biblioteca JR 

public class eje5a{

    private static int buffer;  //buffer simple de 1 elemento
    private static sem puedoProducir = 1;      //debo permitir que primero se produzca, por eso el 1
    private static sem puedoConsumir = 0;       // debo evitar que un consumidor quiera ingresar la primera vez, por eso 0
    
    private static op void pausa(int tiempo){
        
        try{
                Thread.sleep(tiempo);
        }catch(java.lang.Exception e){}

    }

    //Proceso productor
    private static process PProducer{
        int valor=0;
        while (true) { 
            P(puedoProducir);       //wait al productor
            buffer = valor;
            System.out.println("Producido: " + valor);
            call pausa(1000);
            valor++;
            V(puedoConsumir);       //signal al consumidor
            
        }   
    }

    // Proceso Consumidor
    private static process PConsumer{
        while(true) {
            P(puedoConsumir);   //wait al consumidor
            int valor = buffer;
            System.out.println("Consumido: " + valor);
            call pausa(200);
            V(puedoProducir);   //signal al productor
        }
    }

    //Metodo principal
    public static void main(String[] args) {
        try {
            JR.registerQuiescenceAction(done);     
        } catch (edu.ucdavis.jr.QuiescenceRegistrationException e) {
            e.printStackTrace();
        }
    }

    // Accion a ejecutar cuando terminan todos los procesos
    private static op void done() {
        System.out.println("TODOS LOS DATOS PRODUCIDOS, LEIDOS POR EL CONSUMIDOR");
    }
}

    
